{
    "collab_server" : "",
    "contents" : "---\noutput: pdf_document\n---\n\n\\pagenumbering{gobble}  \n\n\\includegraphics{likert_cover.jpg}\n\n\\newpage\n\n\\pagenumbering{arabic} \n\n# Do not use averages with Likert scale data\n## Dwight Barry, PhD  \n\n\\  \n\n***Enterprise Analytics***  \n**Seattle Children's Hospital**  \nSeattle, WA, USA  \n\n\\  \n\n*Twitter:* @healthstatsdude  \n\n\\  \n\n# About\n\nThis is a short overview of why averages don't work well for evaluating Likert scale or other ordinal-scale data, and what to do instead, with examples using R. While the examples are focused on healthcare surveys, the lessons apply to any use of ordinal scale data.  \n\nNote: all of the data in this document is fake, created specifically to illustrate particular points.   \n\n\\  \n\n*Website:* https://bookdown.org/Rmadillo/likert/  \n\n*Github:* https://github.com/Rmadillo/likert   \n\n\\  \n\n\n\\  \n\n*Cover image*: Gustave DorÃ©, 1863. Illustration 12 for Cervantes's *Don Quixote*. [Public Domain]( https://commons.wikimedia.org/w/index.php?curid=677913).  \n\n\n\\  \n\n\\  \n\n\\   \n\n\n```{r ccbysa, echo=FALSE}\nknitr::include_graphics('/Users/dbarr1/Documents/R/bookdown/likert/images/cc-by-sa.png')\n```\n\n*This work is licensed under a [Creative Commons Attribution-ShareAlike 4.0 License](https://creativecommons.org/licenses/by-sa/4.0/).*  \n\n\\newpage \n\n# Summary\n\n- Likert and similar ordinal-level scales have a variety of uses, particularly within surveys. They also occur in clinical care, for example, in the use of pain scores.  \n \n- When evaluated improperly---particularly through the use of averages---the results can be strikingly misleading. Obviously, misleading results could drive or promote action where none is warranted, and vice versa.  \n \n- In nearly all cases, not only is it mathematically wrong, **taking the average of a Likert-scale variable will *not* provide useful answers** to the questions managers can use to make actionable decisions. In essence, the use of averages cannot account for the importance of capturing and understanding variabililty. Analysts should strive to avoid their use in any reporting solution or analytic product that uses ordinal-scale data.  \n \n- Better ways to represent ordinal-value results include histograms of the values themselves, the use of well-supported \"top-box\"-type proportions, and/or bar charts of percentage by score or score category (e.g., favorable/neutral/unfavorable).  \n\n- \"Statistical significance\" on changes or differences between response groups' medians or distribution shift  can be assessed through non-parametric frequentist tests (e.g., permutation, Mann-Whitney-Wilcoxon), Information Theory, or Bayesian analysis. *t*-tests should never be used on Likert scales because ordinal data does not meet the assumptions of a *t*-test (and when using frequentist tools, one must *also* account for multiple testing to reduce the chance of false positives).  \n \n- A good way to remember not to use means on Likert scale data is to think: The average of *Agree* and *Strongly Agree* is **not** *Agree-And-A-Half*.  \n\n\\newpage\n\n# Data and R packages\n\n```{r setup_hidden, include=FALSE}\nknitr::opts_chunk$set(warning = FALSE, message = FALSE, comment = \"> \", fig.height = 3, fig.align = \"center\")\n```\n\n```{r setup}\n#### Packages ####\nlibrary(grid)\nlibrary(nnet)\nlibrary(coin)\nlibrary(boot)\nlibrary(simpleboot)\nlibrary(knitr)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(AICcmodavg)\nlibrary(polycor)\nlibrary(likert)\nlibrary(MASS)\nlibrary(ordinal)\n```\n\n```{r datsets}\n#### Basic example data set ####\nperson = c('A','B','C','D','E','F')\n\n# Original \nyear1 = c(5,4,4,4,4,4)\nyear2 = c(2,5,5,5,5,4)\nyear3 = c(3,5,5,5,5,3)\nyear4 = c(1,5,5,5,5,5)\n\n# A more obvious version\n# year1 = c(3,3,3,3,3,3)\n# year2 = c(4,4,4,2,2,2)\n# year3 = c(5,4,3,3,2,1)\n# year4 = c(5,5,5,1,1,1)\n \nex_1 = data.frame(person, year1, year2, year3, year4)\n \nex_1_long = reshape2::melt(ex_1)\n\n#### Larger example data set ####\n\nset.seed(29)\n\nmd = data.frame(Group = as.character(\"MD\"), \n    Response1 = ordered(sample(1:5, 100, replace=T, prob=c(.1,.1,.1,.2,.5))), \n    Response2 = ordered(sample(1:5, 100, replace=T, prob=c(.1,.3,.3,.25,.15))))\nrn = data.frame(Group = as.character(\"RN\"), \n    Response1 = ordered(sample(1:5, 100, replace=T, prob=c(.1,.1,.5,.2,.1))), \n    Response2 = ordered(sample(1:5, 100, replace=T, prob=c(.1,.15,.45,.15,.15))))\n \nboth = rbind(md, rn)\n\n# Add some NAs \nmake_NAs = sample(1:200, 15, replace=F)\nboth$Response1[make_NAs] = NA\n \nmake_NAs2 = sample(1:200, 15, replace=F)\nboth$Response2[make_NAs2] = NA\n\n# Add question names to data\nnames(both) = c(\"EmployeeType\", \n                \"My team works well together.\", \n                \"I have the tools I need to do my job.\")\n\n#### Dashboarding pain scores example ####\n\n# Create list for random pain scores\npain_list = list()\n\nfor(i in 1:24){\n  set.seed(i)\n  pain_level = ordered(sample(c(\"Low\", \"Medium\", \"High\"), size = sample(10:30),\n    replace = T, prob = c(.15, .45, .40)), levels = c(\"Low\", \"Medium\", \"High\"))\n  pain_list[[i]] = table(pain_level)\n}\n\n# Unlist into a data frame\npain_df = data.frame(matrix(unlist(pain_list), nrow=24, byrow=T))\ncolnames(pain_df) = c(\"Low\", \"Medium\", \"High\")\n\n# Add some months\npain_scores = data.frame(Month = seq(as.Date(\"2014-10-01\"), by = \"month\", \n  length.out = 24), pain_df)\n\n# Melt into long form, I really should learn tidyr\npain_scores = reshape2::melt(pain_scores, id.vars = \"Month\", \n  variable.name = \"Pain_Group\", value.name = \"Count\")\n\n# Summarize to get counts and percentages\nsurgeries_pain = pain_scores %>% \n  group_by(Month) %>%\n  mutate(Surgeries = sum(Count), percent = (Count / sum(Count)), \n    cumsum = cumsum(percent))\n\n#### For use with chi-square and regression models ####\n\n# Get rid of NAs\nboth2 = na.omit(both)\n\n# Rename columns to something more R-friendly\nnames(both2) = c(\"EmployeeType\", \"Teamwork\", \"Tools\")\n\n# Reverse the levels so 5 will be at top of mosaic plot\nboth2$Teamwork = ordered(both2$Teamwork, levels = c(\"5\", \"4\", \"3\", \"2\", \"1\"))\n\n# Make a table object\nboth2_tab = xtabs(~ both2$EmployeeType + both2$Teamwork)\n\n# For multinomial and prop odds models\nboth3 = both2\n\n# Bring axis back to normal\nboth3$Teamwork = ordered(both3$Teamwork, levels = c(\"1\", \"2\", \"3\", \"4\", \"5\"))\n\n# Data frame for proportional odds regression\nTeamwork_tab_long = both3[,1:2] %>%\n  group_by(EmployeeType, Teamwork) %>%\n  summarize(Count = n())\n\n# Function to turn counts into rows I found laying around the web somewhere\ncountsToCases = function(x, countcol = \"Count\") {\n    # Get the row indices to pull from x\n    idx = rep.int(seq_len(nrow(x)), x[[countcol]])\n    # Drop count column\n    x[[countcol]] = NULL\n    # Get the rows from x\n    x[idx, ]\n}\n\n# Make a data frame for prop odds\nTeamwork_tab_long$Teamwork_Group = as.numeric(Teamwork_tab_long$Teamwork) \nTeamwork_tab_long$Teamwork = ordered(Teamwork_tab_long$Teamwork) \ntab_df = data.frame(countsToCases(Teamwork_tab_long, countcol=\"Count\"))\n```\n\n\\newpage\n\n# *Why not?* A simple example \n\nTake a simple example where a group of 6 people people take the same survey for 4 years, and the mean results for an important question, such as \"my team works well together\", are as follows: \n \n```{r ex_1_table_means, echo=FALSE}\nkable(\n  data.frame(Year = c(\"Year 1\", \"Year 2\", \"Year 3\", \"Year 4\"),\n             Mean = c(round(mean(year1), 2), round(mean(year2), 2), round(mean(year3), 2), round(mean(year4), 2))\n             )\n)\n```\n \nFrom these values, one might conclude that there is an improvement from year 1 to year 2, and no change year-over-year after year 2. \n \nThe values that created the above results are as follows:  \n \n```{r ex_1_table_data, echo=FALSE}\nkable(ex_1, col.names = c(\"Individual\", \"Year 1\", \"Year 2\", \"Year 3\", \"Year 4\"))\n```\n \nYou might already see how management decisions would be made differently based on whether one had just the means or had the complete data. \n \nHowever, in the latter case, you risk reducing or eliminating anonymity, which is essential to get respondents to answer truthfully (not to mention being unethical). Further, poring over tables of answers for many people for long surveys makes that approach practically infeasible. \n\nVisualizing the results in ways that capture a more complete story provides an answer to both issues, as well as providing decision-makers with truly actionable information.\n\n# *Always* visualize\n\n## Histograms\n \nHistograms of the actual score values are the best way to visualize Likert data---they have two real axes, showing counts by score value or category, so you can parse the visual and understand the results very quickly. Using the same data as above, you can instantly see that the \"improvement\" in year 2 was perhaps not an improvement after all: while most respondents appear to be satisfied above what they thought in year 1, one respondent may be at risk of leaving.        \n\n \n```{r histos, fig.height=4, fig.width=4, fig.cap=\"Histogram of simple example Likert scale data.\"}\n# Figure 1\nggplot(ex_1_long, aes(value)) +\n    geom_histogram(binwidth=1) +\n    facet_wrap(~variable, ncol=1) +\n    xlab(\"Likert Scale Value\") +\n    theme_bw()\n```\n \n\n\n## Likert charts\n \nThe main disadvantage of histograms is space; Likert charts---which are in essence just stacked bar charts---are far more compact. The disadvantage is that it takes slightly longer for a user to parse them, but when faced with lots of questions or groupings, they tend to be a better option.  \n\nThere are two kinds of Likert charts---those that use a center line for a point of reference, and those that do not, in which case they are simply percentage bar charts for individual questions or are mosaic plots when comparing groupings. In the graphs below, each score value has its own color, and each score category---e.g., unfavorable is 1-2, neutral is 3, and favorable is 4-5 on a 5-point scale---is summarized by a percentage value at the left, middle/interior, and right sides of the bar, respectively.    \n\nThe `likert` package provides some out-of-the-box plots for this type of data, though you must convert the numeric values to factors for it to work.  \n \n```{r ex_1_likert, fig.height = 2.5, fig.cap=\"Centered Likert chart.\"}\n# Covert values to factors\nex_1[2:5] = lapply(ex_1[2:5], factor, levels = 1:5)\n\n# Create a likert object\nex_1_likert = likert(ex_1[2:5])\n\n# Figure 2\nplot(ex_1_likert, ordered = FALSE, group.order = names(ex_1[2:5]))\n```\n```{r ex_1_likert_percent, fig.height = 2.5, fig.cap=\"Uncentered Likert chart (aka percent bar chart).\"}\n# Figure 3\nplot(ex_1_likert, ordered = FALSE, centered = FALSE, group.order=names(ex_1[2:5]))\n```\n\n\nNeither Likert chart type is as clear as the histogram at making the results immediately understandable, but again, histograms take more space, and busy decision makers often need to see the forest (all the questions) at the expense of some trees (each question). In this case, analysts might use the histograms to explore potentially important results themselves, and then use Likert charts in a report with some strategically-placed text highlighting important patterns they found with the histograms.  \n\n\n## Other ordinal-scale visualizations\n\nWe'll use a larger data set in this section to illustrate other visualizations of ordinal data.  \n\n```{r ex_2_likert}\n# Create likert object for example data set 2\nex_2_likert = likert(both[2:3])\n```\n\n\n### Heatmap\n\nFigure 4 shows a heatmap of the response frequency for two different questions (e.g., as within a single year's survey). While the use of means and SDs is inappropriate, this particular example directly illustrates why those values don't capture the response patterns in the data.  \n\n```{r likert_viz3, fig.width=8, fig.cap=\"Heatmap of the response frequency for two different questions.\"}\n# Figure 4\nplot(ex_2_likert, type = \"heat\")\n```\n\n### Likert chart with response count histograms\n\nThe same data as seen in the heatmap above is more clearly shown with a Likert chart. Another option available with `likert` objects is to include count histogram to show number of responses and non-answers for each question.    \n\n```{r likert_viz1, fig.width=9.5, fig.cap=\"Likert chart of the response frequency for two different questions.\"}\n# Figure 5\nplot(ex_2_likert, include.histogram = TRUE)\n```\n\n\n### Likert chart with subgroups\n\nSubgroups can sometimes reveal patterns not seen in aggregate data. For example, compare the overall results for \"My team works well together\" in Figure 5 with the responses when broken out by the subgroups of MDs and RNs in Figure 6.    \n\n```{r likert_viz4, fig.width=8, fig.height=4, fig.cap=\"Likert chart of the response frequency for two different questions, grouped by MDs and RNs.\"}\n# Create likert object with groupings included\nboth_likert_2 = likert(both[, c(2:3), drop = FALSE], grouping = both$EmployeeType)\n\n# Figure 6\nplot(both_likert_2, include.histogram = TRUE)\n```\n\n### Density histograms\n\nWhile using a density plot on ordinal data is also statistically inappropriate, it can be a useful tool for an analyst. Bar histograms are difficult to overlay subgroups or different years for a direct comparsion, so must be separated into facets instead, as was seen in Figure 1. Density plots are easier to overlay to show these comparisons, so while not appropriate for a report or dashboard, they can be really useful tools for an analyst during the exploration phase.    \n\n```{r likert_viz5, fig.height=4, fig.cap=\"Density histograms of the response frequency for two different questions, with a grouping variable (MDs and RNs).\"}\n# Figure 7\nplot(both_likert_2, type = \"density\")\n```\n\n### Scatterplots & ordinal correlation\n\nAlthough traditionally many analysts used non-parametric correlation like Spearman's or Kendall's, [polychoric correlation](https://en.wikipedia.org/wiki/Polychoric_correlation) is the proper tool to assess similarities between Likert scale results. (Polyserial correlation is used when one variable is numeric and the other is ordinal.)  \n\n```{r polyc}\npoly_c_both = polychor(both[,2], both[,3])\n```\n\nThe polychoric correlation coefficient between \"My team works well together\" and \"I have the tools I need to do my job\" is `r round(poly_c_both, 4)`. As expected, that suggests that there is no relationship between the responses to these two questions. It's fairly easy to see this lack of relationship in a scatterplot, with the points jittered to give a sense of response density.    \n\n```{r polyc_plot, fig.height=5, fig.cap=\"Scatterplot of ordinal comparisons (jittered to show point density) between the questions 'My team works well together' and 'I have the tools I need to do my job'.\"}\n# Figure 8\nggplot(both, aes(both[,2], both[,3], group=EmployeeType, color=EmployeeType)) +\n  geom_jitter(na.rm=TRUE, width = 0.15, height = 0.15, alpha=0.6, size=3) +\n  xlab(\"My team works well together\") + \n  ylab(\"I have the tools I need to do my job\") +\n  coord_equal()\n```\n\n### Monitoring ordinal data\n\nIn some cases, you may want to monitor data that uses an ordinal scale. If your metric is a \"top box\" type of score, a simple line chart can show that data over time; if it's monitoring a stable process, statistical process control methods can be used as well.  \n\nIf you want to monitor a more complete view of the data, a stacked percentage bar chart shows you trends across the time series.  \n\nPain scores are a common outcome measure in surgeries, which are usually recorded on an intensity scale of 1-10, with 10 being the highest pain imaginable. Many researchers and quality improvement analysts collapse those values into Low (1-3), Medium (4-7), and High (8-10) categories, as the meaning of the exact values varies from patient to patient as well as between clinicians.  \n\nIn this example (Figure 9), the maximum pain score for each patient in the 24 hours following a surgery are recorded, and assigned to a pain category. The total number of patients with maximum pain scores in each pain category are summed each month.   \n\n```{r monitoring, fig.height=4, fig.cap=\"Monitoring maximum pain scores with a stacked percentage bar chart. Total surgeries performed that month occur just below each bar.\"}\n# Figure 9\nggplot(surgeries_pain, aes(x = Month, y = Count, fill = Pain_Group)) +\n  geom_bar(position = \"fill\", stat = \"identity\") +\n  scale_y_continuous(labels = scales::percent) +\n  scale_fill_brewer(name = \"Pain Groups:\", type = \"div\", palette = \"Spectral\", direction = -1) +\n  geom_text(aes(y = -0.02, label = Surgeries), size = 2, color = \"gray40\") +\n  ylab(\"Proportion\") + \n  theme_bw() +\n  theme(legend.position = \"top\")\n```\n\n\n\n\\newpage\n\n# *Neutral* scores matter\n\nYou might have noticed in some surveys that there is often no \"neutral\" or \"undecided\" category included in the middle of the scale, e.g., what's usually a 3 on a 5-point Likert scale. Sometimes it is placed at the end of the scale, and sometimes it is eliminated entirely. The reason for this is that those terms can sometimes be interpreted in a variety of ways; for example, with a question such as \"My pay is fair compared with other companies\", a *Neutral* response could indicate \"I'm neutral on this\", \"yes, I guess so\", \"I don't know\", \"it's neither fair nor unfair\", \"I don't want to answer\", \"I'm not sure what 'fair' means\", and any number of ideas that don't necessarily indicate a true neutral opinion.  \n\nWhen a question has a response option where this type of ambiguity exists, a mean value will tend toward the that option because of this bias, unless of course the mean is already at that value. However, when *Neutral* is marked as 3, and when valid responses tend towards 4s and 5s, these ambiguous responses will drag down the average (and vice versa for responses heavy with 1s and 2s). Of course, you shouldn't use means anyway, as we've seen above, but many reports do---so understanding this effect is important toward interpreting the results in a useful way.  \n\nUse of a median is somewhat resistant to this problem, though you still won't know whether the middle values are valid responses or accidents of interpretation.  \n\nWhen you see an \"undecided\" or \"N/A\" response placed at the end of the scale or missing entirely, it is usually (but not always!) a sign that the survey creator understands this problem.  \n\nSometimes, of course, *Neutral* can be a completely reasonable and unambiguous response to a question. Context matters; while it's easiest for survey creators and scanning software to use the same scale for large numbers of questions, it is important that the analyst understand the extent to which *Neutral* and similar types of responses are a valid part of the measurement scale for each question.  \n\n\\  \n\n\\begin{center}\n  \\includegraphics{no_neutral.png}\n\\end{center}  \n\n\n# How many respondents are enough?\n \nIt's common to think: \"We surveyed everyone in this department, therefore the results we see must be correct.\" However, how people responded to surveys depends on many factors---such as mood the date the survey is taken, recent events in life and in work, changes in organizational structure, and any number of other factors---and many internal surveys are given only once a year. Thus, survey results are really a *sample* of attitudes and opinions, subject to random events and natural fluctuations. \n \nTypical practice at some companies is to expose summary results for groups with six or more people. While this helps preserve some anonymity, it does not include enough responses to ensure the overall response is stable. Comparisons over time or across groups that are not based on stable results can lead to  conclusions about differences that may or may not reflect reality.   \n\nIn this context, *stable* means that the data accurately represent true changes (or lack of change) in the question at hand. It's basically impossible to distinguish natural variation from real change when you have small numbers of respondents. As a result, the National Center for Health Statistics, for example, does not publish results with less than 20 distinct cases or responses. \n\nThe relative standard error (RSE) is the metric used to evaluate whether you have enough values for the results to be stable. The standard error is an estimate of the likely difference between the results and the true value (which in surveys, even of complete populations, can't be known exactly due to the reasons mentioned above). The *relative* standard error is the standard error expressed as a percent of the measure or number of responses, which is a constant function: $\\frac{1}{\\sqrt{responses}} * 100$. This function can be seen in the graph on the next page.    \n\nGenerally, you want RSE values less than 20-25% to have some confidence that your results are stable.  \n\nThe RSE-response count function is shown in Figure 10. The RSE associated with the use of six responses is marked with dark red, and the response count associated with an RSE of 25% is marked with dark blue.  \n\n \n```{r rse, fig.width=8, fig.height=4.5, echo=FALSE, fig.cap=\"The relative standard error function.\"}\nx = seq(1:50)\nrse = data.frame(x = x, y = (1 / sqrt(x)) * 100)\n\n# Figure 10\nggplot(rse, aes(x = x, y = y)) +\n  geom_line() +\n  geom_segment(aes(x=6, y=0, xend=6, yend=41), color=\"darkred\", arrow = arrow(length = unit(0.25, \"cm\"))) +\n  geom_segment(aes(x=6, y=41, xend=0, yend=41), color=\"darkred\", arrow = arrow(length = unit(0.25, \"cm\"))) +\n  geom_label(aes(x=6, y=-5), label = \"6\") +\n  geom_label(aes(x=-1.75, y=41), label = \"41\") +\n  geom_segment(aes(x=16, y=25, xend=16, yend=0), color=\"darkblue\", arrow = arrow(length = unit(0.25, \"cm\"))) +\n  geom_segment(aes(x=0, y=25, xend=16, yend=25), color=\"darkblue\", arrow = arrow(length = unit(0.25, \"cm\"))) +\n  geom_label(aes(x=16, y=-5), label = \"16\") +\n  geom_label(aes(x=-1.75, y=25), label = \"25\") +\n  xlab(\"Number of responses\") +\n  ylab(\"Relative Standard Error\")\n```\n\n# Is there a *significant* difference?  \n \nMany decision-makers want to know if a result is \"significantly different\" from, say, the same response from a previous time period, or between a couple of subgroups in the same response, typically asking for identification of questions in which *p* < 0.05 using a *t*-test. Unfortunately, this is mostly useless, for two reasons. \n\nFirst, acting as if Likert or other ordinal scales are continuous level data leads to many problems of interpretation (see the *Appendix* for a summary table of measurement scales and appropriate statistics). There has been controversy over this distinction for many decades; however, a great way to understand the conceptual problem is to realize that the mean of *Agree* and *Strongly Agree* is **not** *Agree-And-A-Half*---it just makes no sense.  \n\nA subsequent argument might be that, no, it's not conceptually accurate, but it provides a sense for directional changes. However, such results still run into problems of interpretation: if you go from 4.17 to 4.33, have you gone from *Agree.17* to *Agree.33*? What does such an \"improvement\" mean, in practical terms? All you can accurately say is that both values are most consistent with an *Agree* opinion. \n\nSpecifically in the medicine/healthcare context, [Kuzon et al.](https://www.ncbi.nlm.nih.gov/pubmed/8883724) state that the use of parametric statistics on ordinal data (such calculating a mean or using a *t*-test) is the first of \"The seven deadly sins of statistical analysis\". Don't \"sin\" and you don't have to worry about whether your results are illegitmate.    \n\nThere are a few ways around this problem: 1) use medians or other quantiles and test for differences in those statistics (these differences are best assessed via bootstrap or permutation testing), 2) test whether the distribution has shifted (Mann-Whitney-Wilcoxon or $\\chi^2$ tests), or 3) use more advanced techniques such as multinomial or proportional-odds regression (see the [*Advanced*](#Advanced) section, below). These options are the more statistically-correct ways to do it (as opposed a *t*-test).  \n\nHowever, even if you are using the correct tests, the [multiple-testing problem](https://en.wikipedia.org/wiki/Multiple_comparisons_problem) remains if you are using traditional/frequentist inference. Make sure you [consider the possibility of false-positives](http://xkcd.com/882/) in any interpretation of mass-testing results, or use [other inferential approaches](http://labstats.net/articles/overview.html) such as Bayesian or Information-Theoretic instead (the [*Advanced*](#Advanced) section, below, uses an [AIC-based Information-Theoretic approach](https://en.wikipedia.org/wiki/Akaike_information_criterion) for the model results compared against a no-difference model).  \n\n## Permutation & Mann-Whitney tests\n\nSo, using the simple example from Chapter 1, we might want to know whether the median is statistically different between year 1 (Median = `r median(year1)`) and year 2 (Median = `r median(year2)`). Running a [permutation test](https://en.wikipedia.org/wiki/Resampling_(statistics)#Permutation_tests) gives us the following results:   \n  \n\n```{r permtest}\n# Subset to years 1 and 2\nex_1_long_y12 = filter(ex_1_long, variable == \"year1\" | variable == \"year2\")\n\n# Permutation test\noneway_test(value ~ variable, data = ex_1_long_y12, distribution = \"exact\")\n```\n\n\\  \n\nWhile our effect size is \"1\"---more accurately, *Agree* to *Strongly Agree*---the *p*-value of the test is very large (basically 1), so we cannot say that this difference is \"statistically significant\". \n\nWe could also ask, \"has the distribution shifted?\", which would involve using the [Mann-Whitney-Wilcoxon test](https://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U_test):  \n\n```{r cmon_mann}\nwilcox.test(value ~ variable, data = ex_1_long_y12) \n```\n\n\\  \n\nThe *p*-value is non-significant, so the difference between year 1 and year 2 can't be assumed to be a statistically significant change.  \n\nLooking at the raw data or graphs seen earlier, a decision-maker might be justified in wanting to act, but the analysis suggests that the difference is not statistically significant.  \n\nThis leads us to the second problem with using *p*-values for determining whether a statistically-significant difference has occurred: sample size.  \n\n*p*-values are directly dependent on sample size. If your sample is large enough, you are guaranteed to have a small *p*-value. If your sample is small, whether or not you get a significant *p*-value depends on the scale of difference between the groups, i.e., the effect size.  \n\nFor example, consider the following examples evaluating the number of people who answer *Agree* or *Strongly Agree* (the \"favorable\" score group) to a question:  \n\n| Example | Favorable | Total Answers | Effect size | *p*-value |\n| ---------- | --------:| --------:|:-------------------:|:---------:|\n| 1 | 15 | 20 | 75% | 0.04 |\n| 2 | 114 | 200 | 57% | 0.04 |\n| 3 | 1,046 | 2,000 | 52% | 0.04 |\n| 4 | 1,001,450 | 2,000,000 | 50% | 0.04 | \n\nWith 15 of 20 people selecting a favorable value on the Likert scale, we have an effect size of 75%, which is certainly an effect worth taking seriously. That value is also a statistically significant difference (*p* < 0.05), which supports the idea that the majority has a favorable opinion. With a couple of thousand responses (example 3), we again have a statistically significant difference, but the effect size is now only 52%, close enough to even-preference as to be *practically* the same. In medical terms, we might think of this as statistically significant but clinically irrelevant.  \n\n## Effect sizes & CIs\n\nFor these reasons---[and many others outside the scope of these guidelines](http://www.tandfonline.com/doi/full/10.1080/00031305.2016.1154108)---statisticians are moving away from the use of *p*-values. In frequentist statistics, these are being replaced by the use of effect sizes and confidence intervals (CIs); these provide information on both on the precision of the estimated difference, as well as whether the difference can be considered statistically distinct. If the CI includes 0, the difference is not-significant. Regardless of the location of 0, the width of the CI tells you how precise your estimate is.    \n\n```{r mediantest}\nmedian_diff = two.boot(year1, year2, median, R=1000)\ncat(paste0(\"Difference in medians is \", abs(median_diff$t0), \".\"))\n```\n\n\\  \n\n```{r mediantest_ci}\nboot.ci(median_diff, type = \"perc\") \n```\n\n\\  \n\nHere, we see that the effect size is a difference in medians of 1, but the confidence interval on that effect size goes from -1 to +1, i.e. is consistent with any score difference between *Neutral* and *Strongly Agree*. Since that CI includes 0, we can't say that the change from median of *Agree* to a median of *Strongly Agree* is statistically different, though again, sample size matters---one would probably like to try to intervene based on the one respondent who dropped down to 2 (*Disagree*) anyway. \n\n## $\\chi^2$ test\n\nWhile Mann-Whitney-Wilcoxon (sometimes known as the Mann-Whitney *U*-test) is the test most often used with differences between ordinal distributions, there are other options that can tell you whether a measured difference between groups is statistical different. \n\nThe old stand-by in this case is the $\\chi^2$ test, which is often best visualized with a mosaic plot (Figure 11).  \n\n```{r chisq, fig.height=4.25, fig.width=4.5, fig.cap=\"Mosaic plot between Employee Type and responses to the 'My team works well together' question.\"}\n# Figure 11\nmosaicplot(both2_tab, shade = T, main=\"\", xlab=\"Employee Type\", \n  ylab=\"My team works well together\")\n\n# Chi-square test\nchisq.test(both2_tab)\n```\n\n\\  \n\n## Multinomial regression {#Advanced}\n\nThe multinomial regression model is a more powerful (and more modern) version of the $\\chi^2$ test. Here, we're using an AIC-based information-theoretic approach to determine whether the data as we see it is as likely a model as a model that suggests no difference between MD and RN responses. The probabilities can be plotted with a line chart for easy comparison.    \n\n```{r multnom, fig.height=2.5, fig.cap=\"Multinomial regression between Employee Type and responses to the 'My team works well together' question, with information-theoretic table for multi-model inference.\"}\n# Multinomial regression\nmultnom_both = multinom(Teamwork ~ EmployeeType, data = both3, trace = FALSE)\nmultnom_both_1 = multinom(Teamwork ~ 1, data = both3, trace = FALSE)\n\n# New data for prediction\ndf_both = data.frame(EmployeeType = rep(c(\"MD\", \"RN\"), each = 5),  \n  Teamwork = rep(c(1:5), 2))\n\n# Get probabilities\nmultnom_both_probs = cbind(df_both, predict(multnom_both, \n  newdata = df_both, type = \"probs\", se = TRUE))\n\n# Clean up, ugh\nmultnom_both_probs = multnom_both_probs[,-2]\nmultnom_both_probs = unique(multnom_both_probs)\n\n# Make data frame for ggplot, probably should figure out tidyr\nmultnom_both_probs_df = reshape2::melt(multnom_both_probs, \n  id.vars = \"EmployeeType\", variable.name = \"Teamwork\", \n  value.name = \"probability\")\n\n# Figure 12\nggplot(multnom_both_probs_df, aes(x = Teamwork, y = probability, \n    color = EmployeeType, group = EmployeeType)) +\n  geom_line() + \n  geom_point() +\n  xlab(\"My team works well together\")\n```\n\nThere appears to be an effect based on Employee Type; the AIC weight for that model is practically 1, making it clearly the best model of the model set.  \n\n```{r multnom_model_comps}\n# AICc table\nmod_set = list()\n    mod_set[[1]] = multnom_both\n    mod_set[[2]] = multnom_both_1\n\nkable(aictab(mod_set, modnames = c(\"Employee Type\", \"Null Model\")))\n```\n\n\\  \n\n## Proportional-odds regression\n\nIf you can meet the assumptions, the proportional-odds regression is more powerful than the multinomial model, as it can take into account the ordered nature of the ordinal scale.  \n\nAgain, we use the information-theoretic approach to determine whether there is an effect based on Emplolyee Type, again plotted with a line chart for easy comparison. And again the AICc results suggest an effect is present. The probabilities are slightly different from the multinomial model, but may be more accurate since we are now accounting for the ordered nature of the response values.        \n\n\n```{r prop_odds, fig.height = 2.5, fig.cap=\"Proportional odds regression between Employee Type and responses to the 'My team works well together' question, with information-theoretic table for multi-model inference.\"}\n# Proportional odds regression with polr\npolr_both = polr(Teamwork ~ EmployeeType, data = Teamwork_tab_long, \n  weight = Count)\n\n# New data for prediction, same as multinom\ndf_both = data.frame(EmployeeType = rep(c(\"MD\", \"RN\"), each = 5),  \n  Teamwork = rep(c(1:5), 2))\n\n# Get probabilities\npolr_both_probs = cbind(df_both, predict(polr_both, newdata = df_both, \n  type = \"probs\", se = TRUE))\n\n# Clean up, ugh\npolr_both_probs = polr_both_probs[,-2]\npolr_both_probs = unique(polr_both_probs)\n\n# Make data frame for ggplot, probably should figure out tidyr\npolr_both_probs_df = reshape2::melt(polr_both_probs, id.vars = \"EmployeeType\", \n  variable.name = \"Teamwork\", value.name = \"probability\")\n\n# Figure 13\nggplot(polr_both_probs_df, aes(x = Teamwork, y = probability, \n    color = EmployeeType, group = EmployeeType)) +\n  geom_line() + \n  geom_point() +\n  xlab(\"My team works well together\")\n```\n\n\n```{r prop_odds_model_comps}\n# I need to better understand diffs between polr and clm\n# because polr objects don't play well with the AICcmodavg package\n# Coefs/thresholds are exactly the same, though\nfm1 = clm(Teamwork ~ EmployeeType, data=tab_df)\n# Null model\nfm2 = clm(Teamwork ~ 1, data=tab_df)\n\n# AICc table\nmod_set = list()\n    mod_set[[1]] = fm1\n    mod_set[[2]] = fm2\n\nkable(aictab(mod_set, modnames = c(\"Employee Type\", \"Null Model\")))\n```\n\nWe can test the assumption of proportional odds with the `anova` function. There's no evidence of a difference, suggesting that the assumption is met.    \n\n```{r pro_odds_assumptions}\nfm3 = clm(Teamwork ~ EmployeeType, data=tab_df, threshold=\"equidistant\")\nanova(fm1, fm3)\n```\n\n\\  \n\nIf the concepts or ideas in this section are confusing, it's probably worth consulting a statistician for help evaluating your data with these tools.  \n\n\\newpage\n\n# A final word\n\n\\  \n\n\"But everybody does it!\" Yeah, and they're wrong.  \n\n\\  \n\n\"But it's directionally correct!\" When a concept is based on discrete categories, \"in-between\" states are simply incoherent. The light's either on or off, practically speaking.  \n\n\\  \n\n\"But I want to!\" No. Just. No.  \n\n\n\\newpage  \n\n# Appendix: Measurement Levels & Summary Statistics\n\n------------------------------------------------------------------------------------------\nStatistic /\\               Categorical\\   Ranked\\     Discrete/Counts\\   Continuous\\\nParameter                  *Nominal*      *Ordinal*   *Interval/Ratio*   *Interval/Ratio* \n------------------------- -------------- ----------- ------------------ ------------------\nData set size (n)\\         Y\\              Y\\          Y\\                  Y\\ \nPercent / Frequency\\       Y\\              Y\\          Y\\                  Y\\ \nCount or rate\\             Y\\              Y\\          Y\\                  Y\\ \nCategories (levels)\\       Y\\              Y\\          Y\\                  Y\\ \nMode\\                      Y\\              Y\\          Y\\                  Y\\ \nMedian\\                    *No*\\              Y\\          Y\\                  Y\\ \nInterquartile range\\       *No*\\              Y\\          Y\\                  Y\\ \nMedian absolute deviation\\ *No*\\              Y\\          Y\\                  Y\\ \nRange\\                     *No*\\              Y\\          Y\\                  Y\\ \nMinimum/maximum value\\     *No*\\              Y\\          Y\\                  Y\\ \nQuantiles\\                 *No*\\              Y\\          Y\\                  Y\\ \nMean (average)\\            *No*\\              *No*\\          Y\\                 Y\\ \nStandard deviation\\        *No*\\              *No*\\          Y\\*\\               Y\\*\\ \nCoefficient of variation\\  *No*\\              *No*\\          Y\\*\\               Y\\*\\ \n------------------------------------------------------------------------------------------\n\n\n\\* You must use the correct distribution (proper mean-variance relationship) to ensure you get the correct standard deviation; most software defaults to calculating the standard deviation for a normally-distributed sample, which could be incorrect for certain kinds of count, rate, or proportion data, for example.  \n\n",
    "created" : 1483491025919.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1207557778",
    "id" : "755B372C",
    "lastKnownWriteTime" : 1483578667,
    "last_content_update" : 1483578667594,
    "path" : "~/Documents/R/SCH_R_Training/Ordinal_Guidelines_pdf_book.Rmd",
    "project_path" : null,
    "properties" : {
        "last_setup_crc32" : "30762FA470295407"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}